// Code generated by MockGen. DO NOT EDIT.
// Source: go.inout.gg/inertia (interfaces: SsrClient)
//
// Generated by this command:
//
//	mockgen -destination mock_test.go -package inertia go.inout.gg/inertia SsrClient
//

// Package inertia is a generated GoMock package.
package inertia

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockSsrClient is a mock of SsrClient interface.
type MockSsrClient struct {
	ctrl     *gomock.Controller
	recorder *MockSsrClientMockRecorder
	isgomock struct{}
}

// MockSsrClientMockRecorder is the mock recorder for MockSsrClient.
type MockSsrClientMockRecorder struct {
	mock *MockSsrClient
}

// NewMockSsrClient creates a new mock instance.
func NewMockSsrClient(ctrl *gomock.Controller) *MockSsrClient {
	mock := &MockSsrClient{ctrl: ctrl}
	mock.recorder = &MockSsrClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSsrClient) EXPECT() *MockSsrClientMockRecorder {
	return m.recorder
}

// Render mocks base method.
func (m *MockSsrClient) Render(arg0 *Page) (*SsrTemplateData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Render", arg0)
	ret0, _ := ret[0].(*SsrTemplateData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Render indicates an expected call of Render.
func (mr *MockSsrClientMockRecorder) Render(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Render", reflect.TypeOf((*MockSsrClient)(nil).Render), arg0)
}
